# -*- coding: utf-8 -*-
"""Breadth_First_Search_(BFS).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1URQOpAFBzqgUT-0E4Zmmi28Gvvtw_5mu
"""

graph = {
    'A':['B','C'],
    'B':['D','E'],
    'C':['F','G'],
    'D':['H','I'],
    'E':['J','K'],
    'F':['L','M','N'],
    'G':[],
    'H':[],
    'I':[],
    'J':[],
    'K':[],
    'L':[],
    'M':[],
    'N':[]
}
visited = [] # List to keep track of visited nodes.
queue = []     #Initialize a queue

def bfs(visited, graph, node):
  visited.append(node)
  queue.append(node)

  while queue:
    s = queue.pop(0)
    print (s, end = " ") 

    for i in graph[s]:
      if i not in visited:
        visited.append(i)
        queue.append(i)

bfs(visited,graph,'A')